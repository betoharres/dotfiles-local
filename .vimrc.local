autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o
autocmd BufReadPre *.js let b:javascript_lib_use_react = 1

" for vim 7
set t_Co=256

" for vim 8
if (has("termguicolors"))
 set termguicolors
endif
colorscheme OceanicNext

set nocursorcolumn
set cursorline

set norelativenumber
syntax sync minlines=256
set timeout timeoutlen=1000 ttimeoutlen=100 "Read keys faster
set laststatus=2 "Always powrline enabled

let g:rspec_runner = "os_x_iterm2"

" Airline
let g:airline_theme='oceanicnext'
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_buffers = 0
let g:airline_powerline_fonts = 1

" Gist
let g:gist_open_browser_after_post = 1
let g:gist_clip_command = 'pbcopy'

" NERDTree
let g:nerdtree_tabs_open_on_console_startup = 1
let NERDTreeQuitOnOpen = 1
let g:nerdtree_tabs_smart_startup_focus = 1
let NERDTreeShowHidden = 1


" JSX lint
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_javascript_checkers = ['standard']

" JSX syntax
let g:jsx_ext_required = 0

" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<S-TAB>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

"Fzf key customization
let g:fzf_action = {
  \ 'ctrl-t': 'tab split',
  \ 'ctrl-i': 'split',
  \ 'ctrl-v': 'vsplit' }

" Navigation
map <C-f> <C-f>zz
map <C-b> <C-b>zz

" Go to Normal mode
inoremap jk <esc>
inoremap jj <esc>

" Too old for this shit
noremap <Leader>w :w<CR>
nnoremap <Leader>q :q<CR>
vmap <Leader>y "+y
nmap <Leader>p "+P

" Life saver
nnore ; :
vnore ; :
no L $
vno L $h
no H _
nnoremap V _v$h

" Centering after searching word
nmap n nzz
nmap N Nzz

" Visual all content in the file
nmap gv ggVG$

" Move lines up and down
nno <C-K> ddkP
nno <C-J> ddp

" Edit .vimrc
nmap <leader>B :tabnew ~/.vimrc.bundles.local<cr>
nmap <leader>Z :tabnew ~/.zshrc.local<cr>
nmap <leader>v :tabnew ~/.vimrc.local<cr>

"switch panes
nmap , <C-W><C-W>

" Expand pane
nmap <leader>+ <C-w>_<C-w><bar>

"Fugitive
nmap <leader>gs :Gstatus<CR>
nmap <leader>gd :Gdiff<CR>
nmap <leader>ga :Gwrite<CR>
nmap <leader>gc :Gcommit -v<CR>
nmap <leader>gp :Gpush<CR>
nmap <leader>gb :Gblame<CR>
nmap <leader>gv :Gvsplit<CR>

" Git Gutter
nmap <Leader>sh <Plug>GitGutterStageHunk
nmap <Leader>rh <Plug>GitGutterRevertHunk

" fzf git
nmap <leader>c :BCommits<cr>
nmap <leader>C :Commits<cr>
nmap <leader>/ :Lines<cr>

" Move through panes
nnoremap <up> <C-w>-
nnoremap <down> <C-w>+
nnoremap <right> <C-w><
nnoremap <left> <C-w>>

" Equalize panes
nmap <leader>= <C-w>=


" Tab navigation
nmap <Leader><Tab> :tabnew<CR>
nmap <S-Tab> :tabprevious<CR>
nmap <Tab>  :tabnext<CR>

" NERDTree
nnoremap <C-n> :NERDTreeToggle<CR>
nnoremap <Leader>n :NERDTreeFind<CR>

" Open fuzzy finder files(faster than ctrlP)
nmap <leader>j :GFiles<CR>

" easy motion keybinding
nmap m <Plug>(easymotion-prefix)
nmap <leader>f <Plug>(easymotion-prefix)f
nmap <leader>F <Plug>(easymotion-prefix)F

" ctags(probably need in the future)
" map <Leader>ct :!ctags -R --exclude=.git --exclude=log *<CR>
" set tags=./tags;
" nnoremap <silent> T :TagbarToggle<CR>

" Expand Region
vmap v <Plug>(expand_region_expand)
vmap <C-v> <Plug>(expand_region_shrink)

" Ag
nnoremap <leader>a :Ag<cr>

" emmet
nmap <leader>e <C-y>,

" Remove trailing whitespace
function! StripWhitespace()
    let save_cursor = getpos(".")
    let old_query = getreg('/')
    :%s/\s\+$//e
    call setpos('.', save_cursor)
    call setreg('/', old_query)
endfunction
noremap <leader>ss :call StripWhitespace()<CR>

iabbr flase false
iabbr ture true
iabbr ned end
iabbr edn end
iabbr dfe def
iabbr nwe new
iabbr uesr user
iabbr calss class
iabbr (0 ()
iabbr )_ ()
