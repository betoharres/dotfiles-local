export PS1='${SSH_CONNECTION+"%{$fg_bold[blue]%}%n@%m:"}%{$fg_bold[blue]%}%c%{$reset_color%}$(git_super_status) %# '
RPROMPT='%{%f%b%k%}%D{%H:%M}'

export GOPATH="$HOME/go"

export PATH="$HOME/.bin:$PATH"
export PATH="/usr/local/bin:/usr/local/sbin:$PATH"
export PATH="/usr/local/opt/openssl/bin:$PATH"
export PATH="/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/bin:$PATH"
export PATH="/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/lib:$PATH"
export PATH="$PATH:/usr/local/lib/node_modules"
export PATH="$PATH:/Users/albertorocha/bin"
export PATH="$PATH:/usr/local/opt/go/libexec/bin"
export PATH="$GOPATH/bin:$PATH"
export PATH=$PATH:/usr/local/m-cli
export PATH="$PATH:`yarn global bin`"

export ANDROID_HOME=/usr/local/opt/android-sdk
export FZF_DEFAULT_OPTS="--history=$HOME/.fzf_history"
export NVM_DIR=~/.nvm

source ~/dotfiles-local/zsh-git-prompt/zshrc.sh
source $(brew --prefix nvm)/nvm.sh
source ~/.iterm2_shell_integration.`basename $SHELL`

# personal
function c() { cd ~/code/"$*"; }
function h() { cd ~/$1; }
function youtube-mp3() { youtube-dl --extract-audio --audio-format mp3 $1; }
function top10cmd() {print -l -- ${(o)history%% *} | uniq -c | sort -nr | head -n 10;}

# git commands
function gcamend() {git commit --amend -m "$*";}
function gcp() {git add -A && git commit -m "$*" && git push;}
function grr() {spring rake routes | grep  "$*";}
# heroku
function gheroku() {git add -A && git commit -m "$*" && git push heroku master;}

#docker
function dcc() { docker-compose $*; }

function gemidao() { gemidao-do-zap --de=519$1 --para=519$2 --token=76d904746ad54bc73687862474028d92; }
function cpPronota () { cp -r ../pronota-frontend/app/containers/$1 src/containers && cp -r ../pronota-frontend/app/components/$1 src/components }

function makegif() {
  ffmpeg -i "$1" -s "$2" -pix_fmt rgb24 -r 16 -f gif - | gifsicle --optimize=3 --delay=3 > out.gif
}

function opendiff () { vim -p $(git status -s | awk '{print $2}') }

# hit CTRL + z to go to background and foreground
fancy-ctrl-z () {
  if [[ $#BUFFER -eq 0 ]]; then
    BUFFER="fg"
    zle accept-line
  else
    zle push-input
    zle clear-screen
  fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

LC_CTYPE=en_US.UTF-8
LC_ALL=en_US.UTF-8

eval "$(hub alias -s)"
eval "$(rbenv init - --no-rehash zsh)"
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
eval "$(rbenv init - --no-rehash)"
